<?xml version="1.0"?>
<project name="Echo Canyon" default="test" basedir=".">
  <description>Echo Canyon Implementation</description>
 
  <property name="main.src" location="src"/>
  <property name="main.build" location="build/main"/>
  <property name="test.src" location="test"/>
  <property name="test.build" location="build/test"/>

  <property name="ns.base" value="net.volus.ronwalf.phs2010.networking.echocanyon"/>

  <property name="client.server.host" value="localhost"/>
  <property name="client.server.port" value="2002"/>

  <property name="bomb.count" value="50000"/>
  <property name="bomb.connections" value="5"/>


  <path id="main.class.path">
    <pathelement location="lib/mina/mina-core-2.0.0-RC1.jar"/>
    <pathelement location="lib/slf4j/slf4j-api-1.6.1.jar"/>
    <pathelement location="lib/slf4j/slf4j-jdk14-1.6.1.jar"/>
  </path>

  <path id="test.class.path">
    <path refid="main.class.path"/>
    <pathelement location="${main.build}"/>
    <pathelement location="lib/junit-4.8.2.jar"/>
  </path>
  
  <target name="init">
    <tstamp/>
    <mkdir dir="${main.build}"/>
    <mkdir dir="${test.build}"/>
  </target>

  <target name="build-main" depends="init">
    <javac srcdir="${main.src}"  destdir="${main.build}" debug="on">
      <classpath refid="main.class.path"/>
    </javac>
  </target>
  
  <target name="build-test" depends="build-main">
    <javac srcdir="${test.src}" destdir="${test.build}" debug="on">
      <classpath refid="test.class.path"/>
    </javac>
  </target>


  <target name="test" depends="build-test">
    <junit fork="yes" haltonfailure="false" dir="." 
           failureproperty="test.failure"
           showoutput="true"
           printsummary="withOutAndErr">
      <formatter type="plain"/>
      <classpath refid="test.class.path"/>
      <classpath path="${test.build}"/>
      <batchtest>
         <fileset dir="${test.build}">
           <include name="**/Test*.class"/>
         </fileset>
      </batchtest>
    </junit>
    <fail if="test.failure" message="JUnit test failure."/>
  </target>

  <target name="zip">
    <zip destfile="EchoCanyon.zip">
      <zipfileset dir="." prefix="EchoCanyon">
        <include name="build.xml"/>
        <include name="README"/>
        <include name="LICENSE"/>
        <include name=".classpath"/>
        <include name=".project"/>
        <include name=".settings/**"/>
        <include name="**/*.java"/>
        <include name="lib/**"/>
      </zipfileset>
    </zip>
  </target>

  <target name="clean">
    <delete dir="${main.build}"/>
    <delete dir="${test.build}"/>
  </target>

  <target name="bomb1">
    <property name="bomb.class" value="${ns.base}.threaded.EchoBomb1"/>
    <antcall target="bomb"/>
  </target>

  <target name="bomb2">
    <property name="bomb.class" value="${ns.base}.threaded.EchoBomb2"/>
    <antcall target="bomb"/>
  </target>

  <target name="bomb3">
    <property name="bomb.class" value="${ns.base}.threaded.EchoBomb3"/>
    <antcall target="bomb"/>
  </target>

  <target name="abomb1">
    <property name="bomb.class" value="${ns.base}.async.EchoABomb1"/>
    <antcall target="bomb"/>
  </target>

  <target name="abomb2">
    <property name="bomb.class" value="${ns.base}.async.EchoABomb2"/>
    <antcall target="bomb"/>
  </target>

  <target name="abomb3">
    <property name="bomb.class" value="${ns.base}.async.EchoABomb3"/>
    <antcall target="bomb"/>
  </target>

  <target name="bomb" depends="build-main">
    <property name="bomb.class" value="${ns.base}.threaded.EchoBomb1"/>
    <java classname="${bomb.class}" fork="true"
      failonerror="true">
      <classpath refid="test.class.path"/>
      <arg value="${client.server.host}"/>
      <arg value="${client.server.port}"/>
      <arg value="${bomb.count}"/>
      <arg value="${bomb.connections}"/>
    </java>
  </target>
  
</project>
